{"cells":[{"cell_type":"markdown","metadata":{"id":"xsfTMU-dP1Lb"},"source":["TOPIC: RobustBERT/RobustGPT (One of our teams will do GPT the other will do BERT)\n","PROMPT: SENTIMENT CLASSIFICATION\n","\n","Workflow:\n","\n","1. Gather natural language data (depending on prompt)\n","2. Preprocess data (spacy, pytorch, huggingface, Tokenizer)\n","3. Implement models GPT/BERT and train against the collected data\n","4. Create algorithms for adversarial attacks against BERT/GPT (creating typos in words, using wrong synonyms, removing/adding random words, etc)\n","5. Create defenses against the attacks (maybe a second model for cleaning inputs/algorithm to correct typos/etc)\n"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":579,"referenced_widgets":["d290eb9946ee44ae8e26524132bdd9c3","56fffcb8438349309d6e2e07a6bf1e28","c9c8636e075d400687714277fdbfd02d","47a43283afc64bbbad1f3dc6501cfa58","d575efe592a647cc8de69d1ceb1dc7fa","eab6f65d62a8467e9618f8791e983164","f28d2805440b49249eda6c708084e4e7","55e47e5212ae4e11a756f356468b00df","82a84df8ab3242a89ff4329c3dd33130","eb22edbb8b1145f599b9e6e509980a29","a894c7428a134ebdaa283d6b413cde59","67bccf34068c4a2f95869ae750737d4f","d034e268d8f6437394df25750e0af0b0","f39bd77737994dc4b644abfa63e7cb71","5de4c4f39f3e4de89ef023a1c1735d2e","724f2b4578a14c4cb8ff36441c163420","523804710b154a82b6686c50f4502084","39fb69047c474642bc199e11da8deaec","01d2212fef3e4abf8350cdd9a2163ab8","01bbfe7c60904e14b7acc0d628c1a24b","e590688b5db94a72be97ebd41e442733","b7f23f2e233f484f9e01895e2f94faf9","b93251e173d9499a8fa64003f9a84e3f","52fa85ea23eb40ecbee28295e121eea6","730db9508f374ddb8a98eed3753ed2d2","b74eea44a8514eac938e8bf66463a9f0","f695cba7d49045f9926c70cea504d861","5c101d5c252840b8bc73a1adeeda4417","f8a73bf5288949f293fff33f13b5d35c","95726308b19043d29231487a962c8d74","675a59fcd8ae46b08ca09e7d40d729bd","80aa645179354a05b1e4c0b7cf93c3d7","feef0950f18740998e6dc0cf47b21130","6d3793843f6648b38dd9b535949b8208","3214725e0707483bbb023cd134c31cf0","9c00c306b2db42608723d019771bdbb0","b384835babee4e1d8be77b06d7212c0b","9a5d9013b8084e53b20294b55eb2c38d","0acba428dab74364b934f98258cbdbbb","7789ca7f760c41d9ad6eaf4e974997e9","e6ba2b87a7314a7f9623a2cd1edf08b5","727c55139bc645a0965abdf55caeb7ef","d3c1ff822be84afba875fa7b2a27ec6b","ea0f2cbcf39a428fb5ad96007bdb53bf","2868769e551b48cf967d6e69b7f4244a","59e03b00226c4c0fbb480eb531c24567","4b223b7403444f22825e2d53bc0d43c3","5c26cc98375048b7a1f9824fcee5c4f0","90f4d739aab14992ac0d581717b544ef","8dc32c3be32241d5865b3af1fd78b7af","d1ca5cfea3cf4fa2be85130345a02f84","ed885934d4644836960a90ca0e429525","2e6e8531932b45f9bbe4cc74e21162cf","5ab63a87c24b41eabfa1f7c2afe5df06","61796d1ba098476791e7d51ea1af5209"]},"executionInfo":{"elapsed":16988,"status":"ok","timestamp":1702586934411,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"DybuayPtP2uu","outputId":"dcdacd51-bcde-496f-88e4-0accdaeaf74b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.13.1)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.1)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.11.17)\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d290eb9946ee44ae8e26524132bdd9c3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"67bccf34068c4a2f95869ae750737d4f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b93251e173d9499a8fa64003f9a84e3f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6d3793843f6648b38dd9b535949b8208"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2868769e551b48cf967d6e69b7f4244a"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"stream","name":"stdout","text":["Input Sentence: I love using this product! It's amazing.\n","Predicted Sentiment Label: 0\n","Predicted Sentiment Probabilities: [[0.6279537677764893, 0.37204620242118835]]\n"]}],"source":["!pip install transformers\n","\n","import torch\n","from transformers import BertTokenizer, BertForSequenceClassification\n","from torch.nn.functional import softmax\n","\n","# Load pre-trained BERT model and tokenizer\n","model_name = 'bert-base-uncased'  # You can use other pre-trained models as well\n","tokenizer = BertTokenizer.from_pretrained(model_name)\n","bertmodel = BertForSequenceClassification.from_pretrained(model_name)\n","\n","# Define a sample sentence for sentiment analysis\n","sentence = \"I love using this product! It's amazing.\"\n","\n","# Tokenize the input sentence and convert to tensor\n","inputs = tokenizer(sentence, return_tensors=\"pt\")\n","input_ids = inputs[\"input_ids\"]\n","\n","# Forward pass through the model\n","outputs = bertmodel(**inputs)\n","\n","# Get the predicted probabilities for each class\n","logits = outputs.logits\n","probs = softmax(logits, dim=1)\n","\n","# Get the predicted sentiment label\n","predicted_label = torch.argmax(probs).item()\n","\n","# Print results\n","print(f\"Input Sentence: {sentence}\")\n","print(f\"Predicted Sentiment Label: {predicted_label}\")\n","print(f\"Predicted Sentiment Probabilities: {probs.tolist()}\")"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"ebRTQ_NxyfUi","executionInfo":{"status":"ok","timestamp":1702586934412,"user_tz":300,"elapsed":5,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["import torch\n","from torch.utils.data import DataLoader, Dataset\n","from tqdm import tqdm\n","\n","class SentimentDataset(Dataset):\n","    def __init__(self, texts, labels, tokenizer, max_length=128):\n","        self.texts = texts\n","        self.labels = labels\n","        self.tokenizer = tokenizer\n","        self.max_length = max_length\n","\n","    def __len__(self):\n","        return len(self.texts)\n","\n","    def __getitem__(self, idx):\n","        text = str(self.texts[idx])\n","        label = int(self.labels[idx])\n","        encoding = self.tokenizer(text, truncation=True, padding='max_length', max_length=self.max_length, return_tensors='pt')\n","\n","        return {\n","            'input_ids': encoding['input_ids'].flatten(),\n","            'attention_mask': encoding['attention_mask'].flatten(),\n","            'label': torch.tensor(label, dtype=torch.long)\n","        }"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20849,"status":"ok","timestamp":1702586961393,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"4Q7eZK6UzJbf","outputId":"b730d29e-2ae8-4ee8-b40b-7adce08ea3b8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/Shareddrives/RoBERT\n"," lightning_logs   preprocess.py   RoBERT    RobustGPT\t     train.csv\n"," logs\t\t  __pycache__\t  Robert2  'RobustGPT NEW'   TweetSentiment.csv\n"]}],"source":["%load_ext autoreload\n","%autoreload 2\n","#mount\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","%cd /content/gdrive/Shareddrives/RoBERT\n","!ls"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"aoxkDzwczqgR","executionInfo":{"status":"ok","timestamp":1702586995541,"user_tz":300,"elapsed":6681,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["import preprocess\n","tweets, labels = preprocess.get_csv_data(r\"TweetSentiment.csv\")\n"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":70},"executionInfo":{"elapsed":702,"status":"ok","timestamp":1702586996241,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"OUqnWsOI53Hs","outputId":"2b638f7b-8a1f-4a78-ecba-8b18bc5ab381"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'#combine into one list\\ndata = list(zip(tweets, labels))\\nseed = 7\\ntest_percent = 0.2\\ntrain_data, test_data = train_test_split(data, test_size=test_percent, random_state=seed)\\n\\nprint(\"Size of train: \", len(train_data))\\nprint(\"Size of test: \", len(test_data))\\nfor i in range(10, 15):\\n    print(\"This sentence is \", preprocess.number_to_label(test_data[i][1]),\": \",test_data[i][0])'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}],"source":["#combine into one list\n","from sklearn.model_selection import train_test_split\n","'''#combine into one list\n","data = list(zip(tweets, labels))\n","seed = 7\n","test_percent = 0.2\n","train_data, test_data = train_test_split(data, test_size=test_percent, random_state=seed)\n","\n","print(\"Size of train: \", len(train_data))\n","print(\"Size of test: \", len(test_data))\n","for i in range(10, 15):\n","    print(\"This sentence is \", preprocess.number_to_label(test_data[i][1]),\": \",test_data[i][0])'''"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"TtVe1aILIuxq","executionInfo":{"status":"ok","timestamp":1702586999565,"user_tz":300,"elapsed":3327,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["import numpy as np\n","\n","# Split your data into training and testing sets\n","\n","num_examples = 50000\n","\n","texts = np.array(tweets) # List of input texts\n","labels = np.array(labels)  # List of corresponding labels (0 or 1 for binary sentiment classification)\n","\n","train_texts, temp_text, train_labels, temp_labels = train_test_split(texts, labels, test_size=0.01, random_state=42)\n","\n","val_texts, test_texts, val_labels, test_labels = train_test_split(temp_text, temp_labels, test_size=0.5, random_state=42)\n","\n","# Create data loaders\n","train_dataset = SentimentDataset(train_texts, train_labels, tokenizer)\n","val_dataset = SentimentDataset(val_texts, val_labels, tokenizer)\n","test_dataset = SentimentDataset(test_texts, test_labels, tokenizer)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8244,"status":"ok","timestamp":1702587007807,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"-h-j8X_JOEqq","outputId":"ff45c842-955d-485c-b2d0-7cb5f12390f9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.1.0+cu121)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (0.16.0+cu121)\n","Collecting pytorch-lightning\n","  Downloading pytorch_lightning-2.1.2-py3-none-any.whl (776 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m776.9/776.9 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.13.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.2.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.2)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Requirement already satisfied: triton==2.1.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.1.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision) (1.23.5)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from torchvision) (2.31.0)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision) (9.4.0)\n","Requirement already satisfied: tqdm>=4.57.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (4.66.1)\n","Requirement already satisfied: PyYAML>=5.4 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (6.0.1)\n","Collecting torchmetrics>=0.7.0 (from pytorch-lightning)\n","  Downloading torchmetrics-1.2.1-py3-none-any.whl (806 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m806.1/806.1 kB\u001b[0m \u001b[31m60.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (23.2)\n","Collecting lightning-utilities>=0.8.0 (from pytorch-lightning)\n","  Downloading lightning_utilities-0.10.0-py3-none-any.whl (24 kB)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.1)\n","Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.10/dist-packages (from fsspec->torch) (3.9.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from lightning-utilities>=0.8.0->pytorch-lightning) (67.7.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (2023.11.17)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (23.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.9.4)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.3.1)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (4.0.3)\n","Installing collected packages: lightning-utilities, torchmetrics, pytorch-lightning\n","Successfully installed lightning-utilities-0.10.0 pytorch-lightning-2.1.2 torchmetrics-1.2.1\n"]}],"source":["pip install torch torchvision pytorch-lightning transformers"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"Bxxx8a0kOVSb","executionInfo":{"status":"ok","timestamp":1702587009227,"user_tz":300,"elapsed":1423,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["import pytorch_lightning as pl\n","from torch.utils.data import RandomSampler\n"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"TIfLH1swL-U1","executionInfo":{"status":"ok","timestamp":1702587009228,"user_tz":300,"elapsed":4,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["import torch.nn.functional as F\n","class BertClassifier(pl.LightningModule):\n","    def __init__(self, num_classes):\n","        super(BertClassifier, self).__init__()\n","        self.bert = bertmodel\n","        self.valoutputs = []\n","\n","    def forward(self, input_ids, attention_mask):\n","        outputs = self.bert(input_ids, attention_mask=attention_mask, output_hidden_states=True)\n","        return outputs\n","\n","    def training_step(self, batch, batch_idx):\n","        input_ids = batch['input_ids']\n","        attention_mask = batch['attention_mask']\n","        labels2 = batch['label']\n","\n","        outputs = self.bert(input_ids, attention_mask).logits\n","        loss = F.cross_entropy(outputs, labels2)\n","\n","        return loss\n","\n","    def validation_step(self, batch, batch_idx):\n","        input_ids = batch['input_ids']\n","        attention_mask = batch['attention_mask']\n","        labels2 = batch['label']\n","\n","        logits2 = self.bert(input_ids, attention_mask).logits\n","\n","        # Use F.cross_entropy for the CrossEntropyLoss\n","        loss = F.cross_entropy(logits2, labels2)\n","\n","        preds = torch.argmax(logits2, dim=1)\n","        accuracy = (preds == labels2).float().mean()\n","\n","        self.valoutputs.append(accuracy)\n","\n","        return loss\n","\n","    def on_validation_epoch_end(self):\n","        all_preds = torch.stack(self.valoutputs)\n","        avg_val_accuracy = all_preds.mean()\n","        print(f'Validation Accuracy: {avg_val_accuracy.item()}')\n","        self.valoutputs.clear()\n","\n","    def configure_optimizers(self):\n","        optimizer = torch.optim.AdamW(self.parameters(), lr=2e-5)\n","        return optimizer"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"sBxlDdJHMQDv","executionInfo":{"status":"ok","timestamp":1702587009228,"user_tz":300,"elapsed":3,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["class RoBERTDataModule(pl.LightningDataModule):\n","    def __init__(self, train_dataset, val_dataset, test_dataset, batch_size):\n","        super(RoBERTDataModule, self).__init__()\n","        self.train_dataset = train_dataset\n","        self.val_dataset = val_dataset\n","        self.test_dataset = test_dataset\n","        self.batch_size = batch_size\n","\n","    def train_dataloader(self):\n","        train_data = DataLoader(self.train_dataset, sampler = RandomSampler(self.train_dataset, num_samples=num_examples), batch_size = self.batch_size)\n","        return train_data\n","\n","    def val_dataloader(self):\n","        val_data = DataLoader(self.val_dataset, batch_size = self.batch_size)\n","        return val_data\n","\n","    def test_dataloader(self):\n","        test_data = DataLoader(self.test_dataset, batch_size = self.batch_size)\n","        return test_data"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"executionInfo":{"elapsed":321,"status":"ok","timestamp":1702593128947,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"hh_TfGNJQoVf","outputId":"117a9488-925f-49cb-fa56-9f1a607fdff3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"from torch.utils.data import DataLoader\\nfrom transformers import AdamW\\nfrom tqdm import tqdm\\n\\n#train_data and test_data are from prev cell,\\n#stored as [(sentence, sentiment), ...]\\n\\n#HYPERPARAMS\\nNUM_EPOCHS = 3\\nNUM_CLASSES = 2\\nBATCH_SIZE = 16 #batch size\\n#learning_rate = 1e-5\\n\\nmodel = BertClassifier(num_classes=NUM_CLASSES)\\ndata_module = RoBERTDataModule(train_dataset, val_dataset, test_dataset, batch_size=BATCH_SIZE)\\n\\ntrainer = pl.Trainer(accelerator='gpu',\\n                     devices=1,\\n                     max_epochs = NUM_EPOCHS,\\n                     min_epochs = NUM_EPOCHS) # Adjust parameters as needed\\n\\ntrainer.fit(model, data_module)\\n\\n# Convert dataset to PyTorch DataLoader\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":53}],"source":["'''from torch.utils.data import DataLoader\n","from transformers import AdamW\n","from tqdm import tqdm\n","\n","#train_data and test_data are from prev cell,\n","#stored as [(sentence, sentiment), ...]\n","\n","#HYPERPARAMS\n","NUM_EPOCHS = 3\n","NUM_CLASSES = 2\n","BATCH_SIZE = 16 #batch size\n","#learning_rate = 1e-5\n","\n","model = BertClassifier(num_classes=NUM_CLASSES)\n","data_module = RoBERTDataModule(train_dataset, val_dataset, test_dataset, batch_size=BATCH_SIZE)\n","\n","trainer = pl.Trainer(accelerator='gpu',\n","                     devices=1,\n","                     max_epochs = NUM_EPOCHS,\n","                     min_epochs = NUM_EPOCHS) # Adjust parameters as needed\n","\n","trainer.fit(model, data_module)\n","\n","# Convert dataset to PyTorch DataLoader'''\n"]},{"cell_type":"code","source":["torch.save(model, 'robert.pth')"],"metadata":{"id":"FuTK6NpFF-uH","executionInfo":{"status":"ok","timestamp":1702587841063,"user_tz":300,"elapsed":1216,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":13,"metadata":{"id":"9QfYxN70Pmld","executionInfo":{"status":"ok","timestamp":1702587867636,"user_tz":300,"elapsed":348,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"outputs":[],"source":["def classify(sentence):\n","  # Tokenize the input sentence and convert to tensor\n","  inputs = tokenizer(sentence, return_tensors=\"pt\")\n","\n","  input_ids = inputs[\"input_ids\"]\n","  attention_mask = (input_ids != tokenizer.pad_token_id).float()\n","\n","  # Forward pass through the model\n","  outputs = model(input_ids, attention_mask)\n","\n","  # Get the predicted probabilities for each class\n","  logits = outputs.logits\n","  probs = softmax(logits, dim=1)\n","\n","  # Get the predicted sentiment label\n","  predicted_label = torch.argmax(probs).item()\n","\n","  print(preprocess.number_to_label(predicted_label))\n","\n","  return predicted_label"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":368,"status":"ok","timestamp":1702243694455,"user":{"displayName":"Jonathan Dou","userId":"05800810679780924235"},"user_tz":300},"id":"V9g-dGb1yaWM","outputId":"962def4a-8e38-4cc3-889a-0d62cd16e863"},"outputs":[{"output_type":"stream","name":"stdout","text":["Positive\n"]},{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":14}],"source":["classify(\"im going to check twitter\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":356,"status":"ok","timestamp":1702243694810,"user":{"displayName":"Jonathan Dou","userId":"05800810679780924235"},"user_tz":300},"id":"5Gj7h_bUWezS","outputId":"e424b3c6-c108-47ed-d36b-2a616d575cd6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Positive\n"]},{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":15}],"source":["classify(\"I am black\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":298,"status":"ok","timestamp":1701565689418,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"ybua6TH4yZ7v","outputId":"038084b6-c035-4932-94eb-d4431cb44e03"},"outputs":[{"name":"stdout","output_type":"stream","text":["Negative\n"]}],"source":["classify(\"I am white\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q2646yK1Akfe"},"outputs":[],"source":["# Define a dictionary mapping each key on the keyboard to its nearby keys\n","keyboard_mapping = {\n","        'q': 'qwaserzx',\n","        'w': 'wqesadrfx',\n","        'e': 'ewrsfdctg',\n","        'r': 'retdfgvyh',\n","        't': 'tryughvb',\n","        'y': 'ytughvcxb',\n","        'u': 'uyihjbn',\n","        'i': 'iuojkbnm',\n","        'o': 'oiplkbn',\n","        'p': 'opklmn',\n","        'a': 'aqszx',\n","        's': 'swxadf',\n","        'd': 'desxcfvr',\n","        'f': 'fdgrvct',\n","        'g': 'gfhbtyv',\n","        'h': 'hbgjyunt',\n","        'j': 'jhknuim',\n","        'k': 'kjlinom',\n","        'l': 'lkjmnop',\n","        'z': 'zaxs',\n","        'x': 'xzsdc',\n","        'c': 'cxvdf',\n","        'v': 'vcbfg',\n","        'b': 'bnvgh',\n","        'n': 'nmbhj',\n","        'm': 'mnjkl'\n","    }"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bTqk11BJXgCu"},"outputs":[],"source":["import random\n","\n","def introduce_typos(sentence, typo_probability):\n","\n","    # Convert the sentence to a list of characters\n","    sentence_chars = list(sentence)\n","\n","    # Iterate through each character and introduce typos with the specified probability\n","    for i in range(len(sentence_chars)):\n","        if random.random() < typo_probability:\n","            # Introduce a typo by selecting a nearby key\n","            current_char = sentence_chars[i].lower()\n","            if current_char in keyboard_mapping:\n","                replacement_char = random.choice(keyboard_mapping[current_char])\n","                sentence_chars[i] = replacement_char\n","\n","    # Convert the list of characters back to a string\n","    return ''.join(sentence_chars)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":158,"status":"ok","timestamp":1701538083843,"user":{"displayName":"Jonathan Dou","userId":"05800810679780924235"},"user_tz":300},"id":"CGwxVJx9AyWU","outputId":"94f995a1-94d9-4126-d83c-c9c34afaafbf"},"outputs":[{"name":"stdout","output_type":"stream","text":["Original Sentence: I love BERT.\n","Sentence with Typos: I love BERT.\n"]}],"source":["original_sentence = \"I love BERT.\"\n","typo_probability = 0.2  # Adjust the probability as needed\n","sentence_with_typos = introduce_typos(original_sentence, typo_probability)\n","\n","print(\"Original Sentence:\", original_sentence)\n","print(\"Sentence with Typos:\", sentence_with_typos)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":301,"status":"ok","timestamp":1701538086174,"user":{"displayName":"Jonathan Dou","userId":"05800810679780924235"},"user_tz":300},"id":"vac1aUL5EKBF","outputId":"affec4f6-957b-40ec-c0db-d5a79d046c20"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive\n","Negative\n"]}],"source":["original_sentence = \"I'm hot interested in deep learning\"\n","sentence_with_typos = \"I'm not interested in deep learning\"\n","classify(original_sentence)\n","classify(sentence_with_typos)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":33648,"status":"ok","timestamp":1701538141774,"user":{"displayName":"Jonathan Dou","userId":"05800810679780924235"},"user_tz":300},"id":"5gyddOBkGZvU","outputId":"4b6e335d-5c56-494c-8b97-e308ea882863"},"outputs":[{"name":"stdout","output_type":"stream","text":["100\n","og:  Another night of no sleep. I am so tired I could cry  The life of an insomniac is no fun \n","Negative\n","Negative\n","og:  @JennWebb That is happening. For sure! I have to pick, however, between three.... \n","Negative\n","Positive\n","og:  @weatherthastorm woot woot glad ur enjoying ur trip u deserve it hun \n","Positive\n","Positive\n","og:  @ddlovato I wish I was a celeb like you, Miley Cyrus, Selena Gomez, Taylor Swift, and all those pretty girls out there! \n","Negative\n","Negative\n","og:  Pursuing a new business venture. Nervous and excited. \n","Positive\n","Negative\n","og:  Busy week ahead, but its all exciting things \n","Positive\n","Negative\n","og:  @FashionPrisoner good shit yesterday \n","Positive\n","Positive\n","og:  is home after a long weekend. Got to ride in the snow in Palmy today \n","Positive\n","Negative\n","og:  @Spizzel I feel u I can respect that \n","Positive\n","Negative\n","og:  @3CB So what did you find out? Who's male and who's female? Lest you send a tweet recommending a lingerie shop to the wrong person \n","Positive\n","Positive\n","og:  First day of orientation!!! Yayyy soo excited!! \n","Positive\n","Negative\n","og:  Morning Tweets \n","Positive\n","Negative\n","og:  awesome lesson of circuits 2 from rwy 25 today at redcliffe. beautiful weather. \n","Positive\n","Positive\n","og:  wants to go to college \n","Negative\n","Negative\n","og:  http://twitpic.com/7qsc8 - Packing up my room \n","Negative\n","Negative\n","og:  Indeed.  He totally wears like tightish abercrombie and hollister shirts too. It's yummie.\n","Positive\n","Positive\n","og:  Me and Lace coming out of mango tree resturant last year  Paparazzis do my head in! X http://twitpic.com/6u0hf\n","Negative\n","Negative\n","og:  the rainy season is start..?? I don't know..but.. Seoul is rainy day \n","Negative\n","Negative\n","og:  Where is @cacaubrazil?! \n","Negative\n","Negative\n","og:  @popstarmagazine http://twitpic.com/5fdtz - aww thats cute  she's looking really pretty \n","Positive\n","Negative\n","og:  im tired. and bored. you know you wannnaaaa. \n","Negative\n","Negative\n","og:  @thebiblebasher Federal Vision enquiries clearly gave you away as an associate  I know what you're up to this week!\n","Positive\n","Negative\n","og:  @chickenkatsu oh thanks, i'm in support but not green \n","Negative\n","Negative\n","og:  I met like the hottest piece of brown suga tonight &amp; yes she I got the #. She was like U better call me, haha. I'm such a ho sometimes \n","Negative\n","Negative\n","og:  @LuciLifeLover yeah, i already figured it out. i don't think that the setting will improve your english. damn,muss noch kunst machen \n","Negative\n","Negative\n","og:  is relaxing in the beautiful sunshine  x\n","Positive\n","Negative\n","og:  @aprna at least you've got clouds to anticipate rains! We've got nothing \n","Negative\n","Negative\n","og:  let the sun shine in, face it with a grin, smilers never lose, and frowners never win \n","Positive\n","Positive\n","og:  school over.!.4 today  but its over ..!!..Hey tweets..Ellen says hi.!.X\n","Positive\n","Negative\n","og:  @SteveHealy lol aw would ya..say exactly this - Scottish bouncing blonde who is a great laugh and is a really wonderful lady! haha \n","Positive\n","Positive\n","og:  @16_MileyCyrus no, but my mum knows all different sites to get tickets so i hoping i get some if i do im gonna scream \n","Negative\n","Negative\n","og:  #myweakness- havin ya girl ya wife in &quot;love&quot; wit trey thongz n can't do nothin bout it... \n","Negative\n","Negative\n","og:  @mimiandkarl I'll second that  Too difficult to head out if it rains.\n","Negative\n","Negative\n","og:  Turning Into a Veggie NOT Because I Love Animals ,,I Just Don't Like Meat =].Except In Burgers \n","Negative\n","Negative\n","og:  @laurensbite What the....? I am so jealous! Where do we go for coverage? The &quot;go here for details&quot; wasn't clickable   Happy 4 you!!!!\n","Negative\n","Negative\n","og:  aw so sweet froz yogey on a frozenass day. . .@Shaboobie &amp; @suupkamo, yall wanna get scooped up? bamfs minus you 2 righ now! \n","Positive\n","Positive\n","og:  @joshtastic1 so you are like the rest of us on this miserable bank holiday.then LOL \n","Negative\n","Negative\n","og:  @starzapper Oh, and I think it's unfair for Surfer B, because A always has the right of way. Moral of the story: use a red board. \n","Positive\n","Negative\n","og:  i like how in cyprus churches have minarets and monks do a call to prayer \n","Positive\n","Negative\n","og:  poor clark, he got nut on him  http://sml.vg/SOhXdl\n","Negative\n","Negative\n","og:  Going to school. AGAIN. summer will never come \n","Negative\n","Negative\n","og:  Pretty much lost my voice.  \n","Negative\n","Negative\n","og:  wow, going to be so late if duncan doesnt get here sooooon. \n","Negative\n","Negative\n","og:  @VickiHinman  BTW ...congrats, you just hit 1,000 followers!  \n","Positive\n","Negative\n","og:  is bored ..... Wish to meet DEMI LOVATO , SELENA GOMEZ ,ASHLY TISDALE AND MIELY CYRUS  but i live at indonesia\n","Negative\n","Negative\n","og:  wants something sweet... well, anyways. \n","Positive\n","Negative\n","og:  not feeling well. might sleep. please dear god don't let anyone disturb me \n","Negative\n","Negative\n","og:  @aaaashleyyyy  thanks ashley&lt;3\n","Positive\n","Negative\n","og:  @AlohaZen is this reform something u r watching closely? \n","Positive\n","Positive\n","og:  really, really , really miss my Cowboy! \n","Negative\n","Negative\n","og:  @faceofboe you need to play something from Mary Poppins at them, everyone knows that's how rooms get tidy \n","Positive\n","Negative\n","og:  @dstrokeallday happy bday \n","Positive\n","Negative\n","og:  cant sleep, had the weirdest nightmares in my life, got the lights on now, said my prayers! i guess im not sleeping anytime soon \n","Negative\n","Negative\n","og:  @ayende I know, I am working on a couple of posts. I always start and never finish.  Will be better next week.\n","Negative\n","Negative\n","og:  Oft. As finished as I can be. Can I relax and be on holiday now? I think I've missed the acceptable slot for lunch. \n","Negative\n","Negative\n","og:  @uphtopint I'm trying to GET 1,000,000 followers. Because it's the cool thing to do. \n","Positive\n","Positive\n","og:  @sadcollegegrad Haven't found anything at all! I'm resorting to retail to pay the bills \n","Negative\n","Negative\n","og:  @SarahMillican75 you know you tweet too much when everything is a potential twitpic.....  \n","Positive\n","Negative\n","og:  @writeplayrepeat Mayfield is a local milk, too... \n","Positive\n","Positive\n","og:  just ate an egg roll yummy \n","Positive\n","Negative\n","og:  ...first time away from my gorgeous girl....HATING it \n","Negative\n","Negative\n","og:  @SassySenna I'm so tired...  How are you today?\n","Positive\n","Negative\n","og:  I'm hoping to go to Myrtle Beach!! I haven't been since high school! \n","Negative\n","Negative\n","og:  Leg fell asleep... ow. ow. ow. \n","Negative\n","Negative\n","og:  i like the travel agent or the tv newscaster \n","Positive\n","Negative\n","og:  @katekintail Better than nodding off when you're &quot;IN&quot; one  LOL\n","Positive\n","Negative\n","og:  @samoussa87 haha. Good to know \n","Positive\n","Positive\n","og:  ah  Saturdays over spent it doing a whole lot of nothing! so tired gonna go take a break\n","Negative\n","Negative\n","og:  Stuck in traffic \n","Negative\n","Negative\n","og:  Does anyone have Photoshop and/or Illustrator for mac they would like to lend me?! pretty pleaseeee! Lost all mine when mac died \n","Negative\n","Negative\n","og:  @AprAnaya  you will !   check the website so you can have an idea as to what product u want to try . I will sent u the email tomorrow \n","Positive\n","Positive\n","og:  620 a.m. shouldn't exist. Way too early to be awake \n","Negative\n","Negative\n","og:  There you go, the suns out \n","Positive\n","Negative\n","og:  I'm really concerned  . .\n","Negative\n","Negative\n","og:  Haha yet another one!!!  I'm really on a roll with this game!!\n","Positive\n","Negative\n","og:  @misscalico r u in sf yet?  u need to come cuddle!\n","Positive\n","Negative\n","og:  @greekpeace I think choc is right choice, yummy good    Mine is atrocious!   Gonna wait til day of show - gonna be ugly 13 days LOL\n","Positive\n","Positive\n","og:  Hopefully I can take the pics and do a little video for my tutorial and get it edited.  I just haven't been up to it.  \n","Negative\n","Negative\n","og:  Right then, off to do some Rug-Work &amp; work on new Cross-Stitch designs !  Will tweet later !  CFN !\n","Positive\n","Positive\n","og:  @eval08 Get 100 followers a day using www.tweeteradder.com Once you add everyone you are on the train or pay vip \n","Positive\n","Positive\n","og:  @piginthepoke Morning! how are u today? Excellent music choices last night! \n","Positive\n","Positive\n","og:  my thumb hurts after breaking the nail.... \n","Negative\n","Negative\n","og:  Amy is back on air... but her wig is at the washers to get washed \n","Negative\n","Negative\n","og:  @monkeystyxx Yeah, @hexdoll just told us the story. Condolences \n","Negative\n","Negative\n","og:  I know I don't do FF enough, and i should, I promise to do better next Friday! \n","Negative\n","Negative\n","og:  My grandparents 50th anniversary today so going to have a posh lunch at some place. Long journey \n","Positive\n","Negative\n","og:  mufasa!!!! warriors or the OCEAN!  hahahahahaha\n","Positive\n","Positive\n","og:  @xbllygbsn sup? \n","Negative\n","Negative\n","og:  @playspymaster I want an invite! can i join?! \n","Positive\n","Negative\n","og:  wish i could be @ the SHM Pacha opening \n","Negative\n","Negative\n","og:  High, waiting for my food to come out of mcd's. Got an 88 on test \n","Negative\n","Negative\n","og:  @kogantech I'm re-tweeting this to go in the draw to win a Kogan LCD TV - www.kogan.com.au  as seen by 4000 followers \n","Positive\n","Positive\n","og:  @joeymcintyre Only I heard on good authority that your NOT coming back  \n","Negative\n","Negative\n","og:  Got a lovely dm from a random person telling me how great I am... It was intended for @DaveJMatthews \n","Positive\n","Positive\n","og:  @cookiemonster82 head spinning all well \n","Negative\n","Positive\n","og:  lovely sunny day in Fife today; shame i am working \n","Negative\n","Negative\n","og:  @sylera213 I'll trade places with you tonight! \n","Positive\n","Negative\n","og:  @beriberikix You can actually run Umbraco from a USB stick using VistaDB and Cassini web server \n","Positive\n","Negative\n","og:  @OMGlikeCASSIE yeah me 2  and of course it depends on what im writing about\n","Positive\n","Positive\n","og:  Just Joined Twitter!! Sooo Confused!! \n","Negative\n","Negative\n","Original accuracy:  0.0\n","Perturbed accuracy:  0.0\n"]}],"source":["num_samples = 100\n","original_samples = test_texts[:num_samples]\n","print(len(original_samples))\n","perturbed_samples = []\n","for original_sample in original_samples:\n","  perturbed_sample = introduce_typos(original_sample, 0.2)\n","  perturbed_samples.append(perturbed_sample)\n","\n","sample_labels = test_texts[:num_samples]\n","\n","num_correct_original = 0\n","num_correct_perturbed = 0\n","for i in range(number_samples):\n","  true_label = sample_labels[i]\n","  print(\"og: \", original_samples[i])\n","  predicted_original = classify(original_samples[i])\n","  predicted_perturbed = classify(perturbed_samples[i])\n","  if predicted_original == true_label:\n","    num_correct_original += 1\n","  if predicted_perturbed == true_label:\n","    num_correct_perturbed += 1\n","print(\"Original accuracy: \", num_correct_original / num_samples)\n","print(\"Perturbed accuracy: \", num_correct_perturbed / num_samples)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GUbykpNjlE4p"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"sAgW-vCG9RsW"},"source":[]},{"cell_type":"code","execution_count":51,"metadata":{"executionInfo":{"elapsed":333,"status":"ok","timestamp":1702592667444,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"etMINqhHdnVL"},"outputs":[],"source":["# code to generate attacks using PGD\n","# Load pre-trained BERT model and tokenizer\n","# Set model to evaluation mode\n","\n","from sklearn.metrics.pairwise import cosine_similarity\n","\n","bertmodel.eval()\n","\n","def get_nearest_input_ids(embeddings, tokenizer):\n","    # Get the vocabulary embeddings\n","    vocab_embeddings = bertmodel.bert.embeddings.word_embeddings.weight.data\n","\n","    # Calculate cosine similarity between input embeddings and vocabulary embeddings\n","\n","    emb = embeddings.detach().numpy().squeeze()\n","    vem = vocab_embeddings.detach().numpy()\n","\n","    similarities = torch.tensor(cosine_similarity(emb, vem))\n","\n","    # Get the indices of the top-k nearest neighbors for each embedding\n","    most_similar_indices = torch.argmax(similarities, dim=1)\n","\n","    # Convert indices to input IDs\n","\n","    return most_similar_indices\n","\n","def generate_adversarial_example(sentence, label, alpha=1, epsilon=0.1, max_iter=20):\n","    # Tokenize the input sentence\n","    inputs = tokenizer(sentence, return_tensors=\"pt\")#, truncation=True, padding=True)\n","    input_ids = inputs[\"input_ids\"]\n","\n","    attention_mask = (input_ids != tokenizer.pad_token_id).float()\n","\n","    # Forward pass to get logits\n","\n","    input_embeddings = bertmodel.bert.embeddings.word_embeddings(input_ids).clone().detach().requires_grad_(True)\n","\n","    # Calculate loss (assuming binary classification, adjust as needed)\n","\n","    perturbed_tex = \"\"\n","\n","    for i in range(max_iter):\n","\n","        # Forward pass\n","        outputs = bertmodel(inputs_embeds=input_embeddings, attention_mask=attention_mask)\n","        loss = F.cross_entropy(outputs.logits, torch.tensor([label]))\n","\n","        # Backward pass to compute gradients\n","        model.zero_grad()\n","        loss.backward()\n","\n","        # Project the perturbation to stay within the epsilon budget\n","        input_embeddings_grad = input_embeddings.grad.data\n","\n","        input_embeddings = (input_embeddings + alpha * torch.clamp(input_embeddings_grad, -epsilon, epsilon)).clone().detach().requires_grad_(True)\n","\n","        # Clear gradients for the next iteration\n","\n","        # The final input_embeddings contain the perturbed input\n","        perturbed_input_ids = get_nearest_input_ids(input_embeddings, tokenizer)\n","        perturbed_text = tokenizer.decode(perturbed_input_ids.tolist()[1:][:-1])\n","\n","        if i > 0 and not perturbed_text == sentence.lower():\n","          return perturbed_text\n","\n","        if i == 0:\n","          sentence = perturbed_text\n","\n","    return perturbed_text\n"]},{"cell_type":"code","source":["# Example usage\n","sentence = \"Why don't we go to the park today? It's very  nice and  sunny outside.\"\n","label = 1  # Assuming binary classification, adjust as needed\n","\n","perturbed_tokens = generate_adversarial_example(sentence, label)\n","\n","print(perturbed_tokens)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8I6Q7bJ8JaAO","executionInfo":{"status":"ok","timestamp":1702592657177,"user_tz":300,"elapsed":1006,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}},"outputId":"644ad2ee-7606-4642-b8f1-b30a280e81e1"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["why don't we go to the park today? it's very nice and sunny outside.\n","why don't i go to the park today? it's very nice and sunny outside.\n","why don't i go to the park today? it's very nice and sunny outside.\n"]}]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":364,"status":"ok","timestamp":1702588108587,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"sxXSHlsJj408","outputId":"135f9ba7-7d0e-4b0d-d9ea-0b1bd5f09545"},"outputs":[{"output_type":"stream","name":"stdout","text":["Positive\n"]},{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":30}],"source":["classify(\"why don't we go to the park today? it's nice outside\")"]},{"cell_type":"code","source":[],"metadata":{"id":"Z9Vejcy6KaER"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":442},"executionInfo":{"elapsed":426082,"status":"error","timestamp":1702593100418,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"cXMoZPjjheE5","outputId":"f104009c-c91f-45fe-9504-862f23e17013"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.0\n","1.0\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-52-b0dafdd4c18d>\u001b[0m in \u001b[0;36m<cell line: 10>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m   \u001b[0mlabel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m   \u001b[0mperturbed_tokens\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgenerate_adversarial_example\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msentence\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0minputsl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'Text'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mperturbed_tokens\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-51-921bb8d94796>\u001b[0m in \u001b[0;36mgenerate_adversarial_example\u001b[0;34m(sentence, label, alpha, epsilon, max_iter)\u001b[0m\n\u001b[1;32m     48\u001b[0m         \u001b[0;31m# Backward pass to compute gradients\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m         \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzero_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 50\u001b[0;31m         \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     51\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m         \u001b[0;31m# Project the perturbation to stay within the epsilon budget\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/_tensor.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(self, gradient, retain_graph, create_graph, inputs)\u001b[0m\n\u001b[1;32m    490\u001b[0m                 \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    491\u001b[0m             )\n\u001b[0;32m--> 492\u001b[0;31m         torch.autograd.backward(\n\u001b[0m\u001b[1;32m    493\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgradient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcreate_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/autograd/__init__.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\u001b[0m\n\u001b[1;32m    249\u001b[0m     \u001b[0;31m# some Python versions print out the first line of a multi-line function\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    250\u001b[0m     \u001b[0;31m# calls in the traceback and some print out the last line\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 251\u001b[0;31m     Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n\u001b[0m\u001b[1;32m    252\u001b[0m         \u001b[0mtensors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0mgrad_tensors_\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["import pandas as pd\n","\n","df = pd.DataFrame(columns=['Text', 'Label'])\n","\n","samples = 10000\n","\n","inputsl = []\n","labelsl = []\n","\n","for i in range(samples):\n","  sentence = train_texts[i]\n","  label = train_labels[i]\n","\n","  perturbed_tokens = generate_adversarial_example(sentence, label)\n","\n","  inputsl.append({'Text': perturbed_tokens})\n","  labelsl.append({'Label': label})\n","\n","\n","  if i%100 == 0:\n","    print(i*100/samples)\n"]},{"cell_type":"code","source":["# Create DataFrames from lists\n","inputs_df = pd.DataFrame(inputsl)\n","labels_df = pd.DataFrame(labelsl)\n","\n","# Concatenate DataFrames along columns (axis=1)\n","result_df = pd.concat([inputs_df, labels_df], axis=1)\n","\n","result_df.to_csv('adversarial.csv', index=False)"],"metadata":{"id":"tUwH5ktpOAx8","executionInfo":{"status":"ok","timestamp":1702592248151,"user_tz":300,"elapsed":377,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":681,"status":"ok","timestamp":1701566348099,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"D2GoSv9PdqJz","outputId":"7d30310e-7f5d-4701-8509-6cc773a4736e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive\n"]}],"source":["classify(\"im going on a date with my ai girlfriend.\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":300,"status":"ok","timestamp":1701566358096,"user":{"displayName":"Jonathan Dou","userId":"05621974995431668753"},"user_tz":300},"id":"Yv4n0KizQfdi","outputId":"9a0db7cb-8917-4782-e660-cdfa0cc978c7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Negative\n"]}],"source":["classify(\"im going on a date with my sad girlfriend.\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w6kFsq0OQiAN"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"machine_shape":"hm","gpuType":"A100"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"d290eb9946ee44ae8e26524132bdd9c3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_56fffcb8438349309d6e2e07a6bf1e28","IPY_MODEL_c9c8636e075d400687714277fdbfd02d","IPY_MODEL_47a43283afc64bbbad1f3dc6501cfa58"],"layout":"IPY_MODEL_d575efe592a647cc8de69d1ceb1dc7fa"}},"56fffcb8438349309d6e2e07a6bf1e28":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_eab6f65d62a8467e9618f8791e983164","placeholder":"​","style":"IPY_MODEL_f28d2805440b49249eda6c708084e4e7","value":"tokenizer_config.json: 100%"}},"c9c8636e075d400687714277fdbfd02d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_55e47e5212ae4e11a756f356468b00df","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_82a84df8ab3242a89ff4329c3dd33130","value":28}},"47a43283afc64bbbad1f3dc6501cfa58":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_eb22edbb8b1145f599b9e6e509980a29","placeholder":"​","style":"IPY_MODEL_a894c7428a134ebdaa283d6b413cde59","value":" 28.0/28.0 [00:00&lt;00:00, 2.14kB/s]"}},"d575efe592a647cc8de69d1ceb1dc7fa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eab6f65d62a8467e9618f8791e983164":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f28d2805440b49249eda6c708084e4e7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"55e47e5212ae4e11a756f356468b00df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"82a84df8ab3242a89ff4329c3dd33130":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"eb22edbb8b1145f599b9e6e509980a29":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a894c7428a134ebdaa283d6b413cde59":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"67bccf34068c4a2f95869ae750737d4f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d034e268d8f6437394df25750e0af0b0","IPY_MODEL_f39bd77737994dc4b644abfa63e7cb71","IPY_MODEL_5de4c4f39f3e4de89ef023a1c1735d2e"],"layout":"IPY_MODEL_724f2b4578a14c4cb8ff36441c163420"}},"d034e268d8f6437394df25750e0af0b0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_523804710b154a82b6686c50f4502084","placeholder":"​","style":"IPY_MODEL_39fb69047c474642bc199e11da8deaec","value":"vocab.txt: 100%"}},"f39bd77737994dc4b644abfa63e7cb71":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_01d2212fef3e4abf8350cdd9a2163ab8","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_01bbfe7c60904e14b7acc0d628c1a24b","value":231508}},"5de4c4f39f3e4de89ef023a1c1735d2e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e590688b5db94a72be97ebd41e442733","placeholder":"​","style":"IPY_MODEL_b7f23f2e233f484f9e01895e2f94faf9","value":" 232k/232k [00:00&lt;00:00, 950kB/s]"}},"724f2b4578a14c4cb8ff36441c163420":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"523804710b154a82b6686c50f4502084":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"39fb69047c474642bc199e11da8deaec":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"01d2212fef3e4abf8350cdd9a2163ab8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"01bbfe7c60904e14b7acc0d628c1a24b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e590688b5db94a72be97ebd41e442733":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b7f23f2e233f484f9e01895e2f94faf9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b93251e173d9499a8fa64003f9a84e3f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_52fa85ea23eb40ecbee28295e121eea6","IPY_MODEL_730db9508f374ddb8a98eed3753ed2d2","IPY_MODEL_b74eea44a8514eac938e8bf66463a9f0"],"layout":"IPY_MODEL_f695cba7d49045f9926c70cea504d861"}},"52fa85ea23eb40ecbee28295e121eea6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5c101d5c252840b8bc73a1adeeda4417","placeholder":"​","style":"IPY_MODEL_f8a73bf5288949f293fff33f13b5d35c","value":"tokenizer.json: 100%"}},"730db9508f374ddb8a98eed3753ed2d2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_95726308b19043d29231487a962c8d74","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_675a59fcd8ae46b08ca09e7d40d729bd","value":466062}},"b74eea44a8514eac938e8bf66463a9f0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_80aa645179354a05b1e4c0b7cf93c3d7","placeholder":"​","style":"IPY_MODEL_feef0950f18740998e6dc0cf47b21130","value":" 466k/466k [00:00&lt;00:00, 31.6MB/s]"}},"f695cba7d49045f9926c70cea504d861":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5c101d5c252840b8bc73a1adeeda4417":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f8a73bf5288949f293fff33f13b5d35c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"95726308b19043d29231487a962c8d74":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"675a59fcd8ae46b08ca09e7d40d729bd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"80aa645179354a05b1e4c0b7cf93c3d7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"feef0950f18740998e6dc0cf47b21130":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6d3793843f6648b38dd9b535949b8208":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3214725e0707483bbb023cd134c31cf0","IPY_MODEL_9c00c306b2db42608723d019771bdbb0","IPY_MODEL_b384835babee4e1d8be77b06d7212c0b"],"layout":"IPY_MODEL_9a5d9013b8084e53b20294b55eb2c38d"}},"3214725e0707483bbb023cd134c31cf0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0acba428dab74364b934f98258cbdbbb","placeholder":"​","style":"IPY_MODEL_7789ca7f760c41d9ad6eaf4e974997e9","value":"config.json: 100%"}},"9c00c306b2db42608723d019771bdbb0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e6ba2b87a7314a7f9623a2cd1edf08b5","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_727c55139bc645a0965abdf55caeb7ef","value":570}},"b384835babee4e1d8be77b06d7212c0b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d3c1ff822be84afba875fa7b2a27ec6b","placeholder":"​","style":"IPY_MODEL_ea0f2cbcf39a428fb5ad96007bdb53bf","value":" 570/570 [00:00&lt;00:00, 52.3kB/s]"}},"9a5d9013b8084e53b20294b55eb2c38d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0acba428dab74364b934f98258cbdbbb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7789ca7f760c41d9ad6eaf4e974997e9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e6ba2b87a7314a7f9623a2cd1edf08b5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"727c55139bc645a0965abdf55caeb7ef":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d3c1ff822be84afba875fa7b2a27ec6b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ea0f2cbcf39a428fb5ad96007bdb53bf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2868769e551b48cf967d6e69b7f4244a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_59e03b00226c4c0fbb480eb531c24567","IPY_MODEL_4b223b7403444f22825e2d53bc0d43c3","IPY_MODEL_5c26cc98375048b7a1f9824fcee5c4f0"],"layout":"IPY_MODEL_90f4d739aab14992ac0d581717b544ef"}},"59e03b00226c4c0fbb480eb531c24567":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8dc32c3be32241d5865b3af1fd78b7af","placeholder":"​","style":"IPY_MODEL_d1ca5cfea3cf4fa2be85130345a02f84","value":"model.safetensors: 100%"}},"4b223b7403444f22825e2d53bc0d43c3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ed885934d4644836960a90ca0e429525","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2e6e8531932b45f9bbe4cc74e21162cf","value":440449768}},"5c26cc98375048b7a1f9824fcee5c4f0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5ab63a87c24b41eabfa1f7c2afe5df06","placeholder":"​","style":"IPY_MODEL_61796d1ba098476791e7d51ea1af5209","value":" 440M/440M [00:00&lt;00:00, 548MB/s]"}},"90f4d739aab14992ac0d581717b544ef":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8dc32c3be32241d5865b3af1fd78b7af":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1ca5cfea3cf4fa2be85130345a02f84":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ed885934d4644836960a90ca0e429525":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e6e8531932b45f9bbe4cc74e21162cf":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5ab63a87c24b41eabfa1f7c2afe5df06":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"61796d1ba098476791e7d51ea1af5209":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}