{"cells":[{"cell_type":"markdown","metadata":{"id":"xsfTMU-dP1Lb"},"source":["TOPIC: RobustBERT/RobustGPT (One of our teams will do GPT the other will do BERT)\n","PROMPT: SENTIMENT CLASSIFICATION\n","\n","Workflow:\n","\n","1. Gather natural language data (depending on prompt)\n","2. Preprocess data (spacy, pytorch, huggingface, Tokenizer)\n","3. Implement models GPT/BERT and train against the collected data\n","4. Create algorithms for adversarial attacks against BERT/GPT (creating typos in words, using wrong synonyms, removing/adding random words, etc)\n","5. Create defenses against the attacks (maybe a second model for cleaning inputs/algorithm to correct typos/etc)\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":674,"referenced_widgets":["6e30a8a6012744ff99625fedd68affc4","ff359be140eb43ac8d5bd17c336b7928","b1a7325ca76a4ad7a410fa98fc0cb790","1648e34f1c61444bb377d80d982f6793","6319a1710d2644248441f86768aa5927","e1dd4e17864c482dbadd82750794bda6","64db10620caa4c8584b0dcf2c5923ba9","a797a2e62fae4d688315cb64b8f92d08","9ec409b0f0cc47c9ac665d864eea3d70","32a8f40ead35469fbd10759b39b23aa8","21261757adc247469dd212b28cbdd9c7","cb307c49ee1245fbbff31e6abc7cadb0","dbc81286dd224fddb4ba20960f7c59c2","4f28e70dd72d47c9b9230ecb59c45f45","a69bae94985f43cbb661e02143148db2","bba5e7bcd4874b7a8c5a2da2fcbff903","a4059cf2c0df4c39933ed649313d88e8","03a68f8296d54fcca73abd239c87c3f8","11852c7aa65e4a35b2b86aa234ccd2e3","9d0104b85ca54dd88b4d3e26fa60ba4e","5b4915ce14ec4440955e4eea574e6eb9","1896a94914fe4670ab89ced32b777a7e","c6a01ff81284448e9fd3b1aa9bdcc013","03769cd731e247eea28e551f1ee76332","8a4cd43e27c842b39b8774b8a321c3a5","8095eac1d59346b2876db4a65855f866","2c7b881a8f9c4bbf8a71e4884992c6f0","af6b2872e5204e32949fc2269d1ebfd9","3d838bfaa3cf4276adf3878b74ed251b","3289395a367c4d9ba1a11b9f676e73a3","33cd4b1e64f94eb5812249b26a9eb69f","75af42cb57f849d2b03bf29ac3f953d1","127de2827b944e80a131e3bf928b07b8","abf47254d6a14c47baba64616b0b6bf4","bfa188d1a91741ac8e5275fb41226541","755b4e6af4a54654b754e94e0605b2b0","73db575c4eae4dfa96c36d14f7340bf0","a5c8f37190454d73ab1e6d452e7b39fc","fa76b86b9ab74346971ad5d60dc89b39","08b91cc1cf74457fa1b55d16526ec6a6","3644dbdab86f4032959ab23808d005a5","0cb127a7554b498e91f0ac741b808395","9b3533d357f849eb9de8043b7488c836","26d8f8b4d4034b04a9631dfba4bd0786","309294303e364ae3924acd3cde2edf1f","2bae6793c48b44c6a6fe2537f021ed02","2aaae953380b40f5aa783be13bfb6c49","0e5492abe4d9461fa5f5c9a0664c9030","e6cdc062423846918034192e61df0cef","8a0221675e6c4df8a8f636a3471c6d3b","ad6a133580914345bed1f575095702a4","862364e9011d401bba60138994c84d0d","a536a6464d664732acb3d84dada67185","4006ac22966e4251990f58c689dfeb8d","8ae6fb8d05e847d18ccca43eba47423b"]},"executionInfo":{"elapsed":23193,"status":"ok","timestamp":1702103742376,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"DybuayPtP2uu","outputId":"8234924f-da15-46bf-bb00-0ff1adf1efc4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.13.1)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.1)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.11.17)\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6e30a8a6012744ff99625fedd68affc4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cb307c49ee1245fbbff31e6abc7cadb0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c6a01ff81284448e9fd3b1aa9bdcc013"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"abf47254d6a14c47baba64616b0b6bf4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"309294303e364ae3924acd3cde2edf1f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"stream","name":"stdout","text":["Input Sentence: I love using this product! It's amazing.\n","Predicted Sentiment Label: 0\n","Predicted Sentiment Probabilities: [[0.5114179253578186, 0.488582044839859]]\n"]}],"source":["!pip install transformers\n","\n","import torch\n","from transformers import BertTokenizer, BertForSequenceClassification\n","from torch.nn.functional import softmax\n","\n","# Load pre-trained BERT model and tokenizer\n","model_name = 'bert-base-uncased'  # You can use other pre-trained models as well\n","tokenizer = BertTokenizer.from_pretrained(model_name)\n","bertmodel = BertForSequenceClassification.from_pretrained(model_name)\n","\n","# Define a sample sentence for sentiment analysis\n","sentence = \"I love using this product! It's amazing.\"\n","\n","# Tokenize the input sentence and convert to tensor\n","inputs = tokenizer(sentence, return_tensors=\"pt\")\n","input_ids = inputs[\"input_ids\"]\n","\n","# Forward pass through the model\n","outputs = bertmodel(**inputs)\n","\n","# Get the predicted probabilities for each class\n","logits = outputs.logits\n","probs = softmax(logits, dim=1)\n","\n","# Get the predicted sentiment label\n","predicted_label = torch.argmax(probs).item()\n","\n","# Print results\n","print(f\"Input Sentence: {sentence}\")\n","print(f\"Predicted Sentiment Label: {predicted_label}\")\n","print(f\"Predicted Sentiment Probabilities: {probs.tolist()}\")"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"ebRTQ_NxyfUi","executionInfo":{"status":"ok","timestamp":1702103742376,"user_tz":300,"elapsed":7,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["import torch\n","from torch.utils.data import DataLoader, Dataset\n","from tqdm import tqdm\n","\n","class SentimentDataset(Dataset):\n","    def __init__(self, texts, labels, tokenizer, max_length=128):\n","        self.texts = texts\n","        self.labels = labels\n","        self.tokenizer = tokenizer\n","        self.max_length = max_length\n","\n","    def __len__(self):\n","        return len(self.texts)\n","\n","    def __getitem__(self, idx):\n","        text = str(self.texts[idx])\n","        label = int(self.labels[idx])\n","        encoding = self.tokenizer(text, truncation=True, padding='max_length', max_length=self.max_length, return_tensors='pt')\n","\n","        return {\n","            'input_ids': encoding['input_ids'].flatten(),\n","            'attention_mask': encoding['attention_mask'].flatten(),\n","            'label': torch.tensor(label, dtype=torch.long)\n","        }"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27963,"status":"ok","timestamp":1702103770334,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"4Q7eZK6UzJbf","outputId":"e6b82099-0e92-4d64-b89a-ecc7bd7c0e33"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/Shareddrives/RoBERT\n"," lightning_logs   preprocess.py   RoBERT    RobustGPT\t     train.csv\n"," logs\t\t  __pycache__\t  Robert2  'RobustGPT NEW'   TweetSentiment.csv\n"]}],"source":["%load_ext autoreload\n","%autoreload 2\n","#mount\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","%cd /content/gdrive/Shareddrives/RoBERT\n","!ls"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"aoxkDzwczqgR","executionInfo":{"status":"ok","timestamp":1702103784465,"user_tz":300,"elapsed":14138,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["import preprocess\n","tweets, labels = preprocess.get_csv_data(r\"TweetSentiment.csv\")\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"executionInfo":{"elapsed":1648,"status":"ok","timestamp":1702103786100,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"OUqnWsOI53Hs","outputId":"b3f9f2a7-be26-4db2-8b1d-2ddd514cdac7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'#combine into one list\\ndata = list(zip(tweets, labels))\\nseed = 7\\ntest_percent = 0.2\\ntrain_data, test_data = train_test_split(data, test_size=test_percent, random_state=seed)\\n\\nprint(\"Size of train: \", len(train_data))\\nprint(\"Size of test: \", len(test_data))\\nfor i in range(10, 15):\\n    print(\"This sentence is \", preprocess.number_to_label(test_data[i][1]),\": \",test_data[i][0])'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":6}],"source":["#combine into one list\n","from sklearn.model_selection import train_test_split\n","'''#combine into one list\n","data = list(zip(tweets, labels))\n","seed = 7\n","test_percent = 0.2\n","train_data, test_data = train_test_split(data, test_size=test_percent, random_state=seed)\n","\n","print(\"Size of train: \", len(train_data))\n","print(\"Size of test: \", len(test_data))\n","for i in range(10, 15):\n","    print(\"This sentence is \", preprocess.number_to_label(test_data[i][1]),\": \",test_data[i][0])'''"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"TtVe1aILIuxq","executionInfo":{"status":"ok","timestamp":1702104009088,"user_tz":300,"elapsed":4998,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"08943d05-e8cb-4774-cb54-f85e6ca03898"},"outputs":[{"output_type":"stream","name":"stdout","text":["[\"@switchfoot http://twitpic.com/2y1zl - Awww, that's a bummer.  You shoulda got David Carr of Third Day to do it. ;D\"\n"," \"is upset that he can't update his Facebook by texting it... and might cry as a result  School today also. Blah!\"\n"," '@Kenichan I dived many times for the ball. Managed to save 50%  The rest go out of bounds'\n"," ... 'Are you ready for your MoJo Makeover? Ask me for details '\n"," 'Happy 38th Birthday to my boo of alll time!!! Tupac Amaru Shakur '\n"," 'happy #charitytuesday @theNSPCC @SparksCharity @SpeakingUpH4H ']\n","[0 0 0 ... 1 1 1]\n","1600000\n","1600000\n"]}],"source":["import numpy as np\n","\n","# Split your data into training and testing sets\n","\n","num_examples = 20000\n","\n","texts = np.array(tweets) # List of input texts\n","labels = np.array(labels)  # List of corresponding labels (0 or 1 for binary sentiment classification)\n","\n","train_texts, temp_text, train_labels, temp_labels = train_test_split(texts, labels, test_size=0.01, random_state=42)\n","\n","val_texts, test_texts, val_labels, test_labels = train_test_split(temp_text, temp_labels, test_size=0.5, random_state=42)\n","\n","# Create data loaders\n","train_dataset = SentimentDataset(train_texts, train_labels, tokenizer)\n","val_dataset = SentimentDataset(val_texts, val_labels, tokenizer)\n","test_dataset = SentimentDataset(test_texts, test_labels, tokenizer)\n","\n","print(texts)\n","print(labels)\n","print(len(texts))\n","print(len(labels))"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13970,"status":"ok","timestamp":1702103805076,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"-h-j8X_JOEqq","outputId":"f0d0e7c2-91c1-4341-f98b-b5ff427dc073"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.1.0+cu118)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (0.16.0+cu118)\n","Collecting pytorch-lightning\n","  Downloading pytorch_lightning-2.1.2-py3-none-any.whl (776 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m776.9/776.9 kB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.13.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.2.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.2)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Requirement already satisfied: triton==2.1.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.1.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision) (1.23.5)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from torchvision) (2.31.0)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision) (9.4.0)\n","Requirement already satisfied: tqdm>=4.57.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (4.66.1)\n","Requirement already satisfied: PyYAML>=5.4 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (6.0.1)\n","Collecting torchmetrics>=0.7.0 (from pytorch-lightning)\n","  Downloading torchmetrics-1.2.1-py3-none-any.whl (806 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m806.1/806.1 kB\u001b[0m \u001b[31m23.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning) (23.2)\n","Collecting lightning-utilities>=0.8.0 (from pytorch-lightning)\n","  Downloading lightning_utilities-0.10.0-py3-none-any.whl (24 kB)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.1)\n","Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.10/dist-packages (from fsspec->torch) (3.9.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from lightning-utilities>=0.8.0->pytorch-lightning) (67.7.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->torchvision) (2023.11.17)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (23.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.9.3)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (1.3.1)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec->torch) (4.0.3)\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3108, in _dep_map\n","    return self.__dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2901, in __getattr__\n","    raise AttributeError(attr)\n","AttributeError: _DistInfoDistribution__dep_map\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 169, in exc_logging_wrapper\n","    status = run_func(*args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/req_command.py\", line 242, in wrapper\n","    return func(self, options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 441, in run\n","    conflicts = self._determine_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 572, in _determine_conflicts\n","    return check_install_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 101, in check_install_conflicts\n","    package_set, _ = create_package_set_from_installed()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 42, in create_package_set_from_installed\n","    dependencies = list(dist.iter_dependencies())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/metadata/pkg_resources.py\", line 216, in iter_dependencies\n","    return self._dist.requires(extras)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2821, in requires\n","    dm = self._dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3110, in _dep_map\n","    self.__dep_map = self._compute_dependencies()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3120, in _compute_dependencies\n","    reqs.extend(parse_requirements(req))\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3173, in __init__\n","    super(Requirement, self).__init__(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/packaging/requirements.py\", line 102, in __init__\n","    req = REQUIREMENT.parseString(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 1131, in parse_string\n","    loc, tokens = self._parse(instring, 0)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4114, in parseImpl\n","    return e._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3864, in parseImpl\n","    loc, resultlist = self.exprs[0]._parse(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 817, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 3886, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 825, in _parseNoCache\n","    ret_tokens = ParseResults(\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/results.py\", line 154, in __new__\n","    self._tokdict = dict()\n","KeyboardInterrupt\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/bin/pip3\", line 8, in <module>\n","    sys.exit(main())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/main.py\", line 79, in main\n","    return command.main(cmd_args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 101, in main\n","    return self._main(args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 223, in _main\n","    return run(options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 206, in exc_logging_wrapper\n","    logger.critical(\"Operation cancelled by user\")\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1524, in critical\n","    self._log(CRITICAL, msg, args, **kwargs)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1624, in _log\n","    self.handle(record)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1634, in handle\n","    self.callHandlers(record)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1696, in callHandlers\n","    hdlr.handle(record)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 964, in handle\n","    rv = self.filter(record)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 821, in filter\n","    result = f.filter(record)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/utils/logging.py\", line 223, in filter\n","    return not super().filter(record)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 775, in filter\n","    elif self.name == record.name:\n","KeyboardInterrupt\n","^C\n"]}],"source":["pip install torch torchvision pytorch-lightning transformers"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"Bxxx8a0kOVSb","executionInfo":{"status":"error","timestamp":1702103805448,"user_tz":300,"elapsed":377,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}},"colab":{"base_uri":"https://localhost:8080/","height":411},"outputId":"066d60e1-33c4-4071-d9fa-135885528a3c"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-a4ad464247bd>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mpytorch_lightning\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpl\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pytorch_lightning'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["import pytorch_lightning as pl\n","from torch.utils.data import RandomSampler\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TIfLH1swL-U1","executionInfo":{"status":"aborted","timestamp":1702103805449,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["import torch.nn.functional as F\n","class BertClassifier(pl.LightningModule):\n","    def __init__(self, num_classes):\n","        super(BertClassifier, self).__init__()\n","        self.bert = bertmodel\n","        self.valoutputs = []\n","\n","    def forward(self, input_ids, attention_mask):\n","        outputs = self.bert(input_ids, attention_mask=attention_mask)\n","        return outputs.logits\n","\n","    def training_step(self, batch, batch_idx):\n","        input_ids = batch['input_ids']\n","        attention_mask = batch['attention_mask']\n","        labels2 = batch['label']\n","\n","        outputs = self.bert(input_ids, attention_mask).logits\n","        loss = F.cross_entropy(outputs, labels2)\n","\n","        return loss\n","\n","    def validation_step(self, batch, batch_idx):\n","        input_ids = batch['input_ids']\n","        attention_mask = batch['attention_mask']\n","        labels2 = batch['label']\n","\n","        logits2 = self.bert(input_ids, attention_mask).logits\n","\n","        # Use F.cross_entropy for the CrossEntropyLoss\n","        loss = F.cross_entropy(logits2, labels2)\n","\n","        preds = torch.argmax(logits2, dim=1)\n","        accuracy = (preds == labels2).float().mean()\n","\n","        self.valoutputs.append(accuracy)\n","\n","        return loss\n","\n","    def on_validation_epoch_end(self):\n","        all_preds = torch.stack(self.valoutputs)\n","        avg_val_accuracy = all_preds.mean()\n","        print(f'Validation Accuracy: {avg_val_accuracy.item()}')\n","        self.valoutputs.clear()\n","\n","    def configure_optimizers(self):\n","        optimizer = torch.optim.AdamW(self.parameters(), lr=2e-5)\n","        return optimizer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sBxlDdJHMQDv","executionInfo":{"status":"aborted","timestamp":1702103805449,"user_tz":300,"elapsed":12,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["class RoBERTDataModule(pl.LightningDataModule):\n","    def __init__(self, train_dataset, val_dataset, test_dataset, batch_size):\n","        super(RoBERTDataModule, self).__init__()\n","        self.train_dataset = train_dataset\n","        self.val_dataset = val_dataset\n","        self.test_dataset = test_dataset\n","        self.batch_size = batch_size\n","\n","    def train_dataloader(self):\n","        train_data = DataLoader(self.train_dataset, sampler = RandomSampler(self.train_dataset, num_samples=num_examples), batch_size = self.batch_size)\n","        return train_data\n","\n","    def val_dataloader(self):\n","        val_data = DataLoader(self.val_dataset, batch_size = self.batch_size)\n","        return val_data\n","\n","    def test_dataloader(self):\n","        test_data = DataLoader(self.test_dataset, batch_size = self.batch_size)\n","        return test_data"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":12,"status":"aborted","timestamp":1702103805449,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"hh_TfGNJQoVf"},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from transformers import AdamW\n","from tqdm import tqdm\n","\n","#train_data and test_data are from prev cell,\n","#stored as [(sentence, sentiment), ...]\n","\n","#HYPERPARAMS\n","NUM_EPOCHS = 1\n","NUM_CLASSES = 2\n","BATCH_SIZE = 16 #batch size\n","#learning_rate = 1e-5\n","\n","model = BertClassifier(num_classes=NUM_CLASSES)\n","data_module = RoBERTDataModule(train_dataset, val_dataset, test_dataset, batch_size=BATCH_SIZE)\n","\n","trainer = pl.Trainer(accelerator='gpu',\n","                     devices=1,\n","                     max_epochs = NUM_EPOCHS,\n","                     min_epochs = NUM_EPOCHS) # Adjust parameters as needed\n","\n","trainer.fit(model, data_module)\n","\n","# Convert dataset to PyTorch DataLoader\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9QfYxN70Pmld","executionInfo":{"status":"aborted","timestamp":1702103805450,"user_tz":300,"elapsed":12,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["def classify(sentence):\n","  # Tokenize the input sentence and convert to tensor\n","  inputs = tokenizer(sentence, return_tensors=\"pt\")\n","\n","  input_ids = inputs[\"input_ids\"]\n","  attention_mask = (input_ids != tokenizer.pad_token_id).float()\n","\n","  # Forward pass through the model\n","  outputs = model(input_ids, attention_mask)\n","\n","  # Get the predicted probabilities for each class\n","  logits = outputs\n","  probs = softmax(logits, dim=1)\n","\n","  # Get the predicted sentiment label\n","  predicted_label = torch.argmax(probs).item()\n","\n","  return predicted_label"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":12,"status":"aborted","timestamp":1702103805450,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"V9g-dGb1yaWM"},"outputs":[],"source":["classify(\"I am asian\")"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":12,"status":"aborted","timestamp":1702103805450,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"5Gj7h_bUWezS"},"outputs":[],"source":["classify(\"I am black\")"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":12,"status":"aborted","timestamp":1702103805450,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"ybua6TH4yZ7v"},"outputs":[],"source":["classify(\"I am white\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q2646yK1Akfe","executionInfo":{"status":"aborted","timestamp":1702103805451,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["# Define a dictionary mapping each key on the keyboard to its nearby keys\n","keyboard_mapping = {\n","        'q': 'qwaserzx',\n","        'w': 'wqesadrfx',\n","        'e': 'ewrsfdctg',\n","        'r': 'retdfgvyh',\n","        't': 'tryughvb',\n","        'y': 'ytughvcxb',\n","        'u': 'uyihjbn',\n","        'i': 'iuojkbnm',\n","        'o': 'oiplkbn',\n","        'p': 'opklmn',\n","        'a': 'aqszx',\n","        's': 'swxadf',\n","        'd': 'desxcfvr',\n","        'f': 'fdgrvct',\n","        'g': 'gfhbtyv',\n","        'h': 'hbgjyunt',\n","        'j': 'jhknuim',\n","        'k': 'kjlinom',\n","        'l': 'lkjmnop',\n","        'z': 'zaxs',\n","        'x': 'xzsdc',\n","        'c': 'cxvdf',\n","        'v': 'vcbfg',\n","        'b': 'bnvgh',\n","        'n': 'nmbhj',\n","        'm': 'mnjkl'\n","    }"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bTqk11BJXgCu","executionInfo":{"status":"aborted","timestamp":1702103805451,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":["import random\n","\n","def introduce_typos(sentence, typo_probability):\n","\n","    # Convert the sentence to a list of characters\n","    sentence_chars = list(sentence)\n","\n","    # Iterate through each character and introduce typos with the specified probability\n","    for i in range(len(sentence_chars)):\n","        if random.random() < typo_probability:\n","            # Introduce a typo by selecting a nearby key\n","            current_char = sentence_chars[i].lower()\n","            if current_char in keyboard_mapping:\n","                replacement_char = random.choice(keyboard_mapping[current_char])\n","                sentence_chars[i] = replacement_char\n","\n","    # Convert the list of characters back to a string\n","    return ''.join(sentence_chars)\n","\n"]},{"cell_type":"code","source":["new_ex = []\n","for i in range(1000):\n"],"metadata":{"id":"wCyE2-2E_dLc","executionInfo":{"status":"aborted","timestamp":1702103805451,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":14,"status":"aborted","timestamp":1702103805452,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"CGwxVJx9AyWU"},"outputs":[],"source":["original_sentence = \"I love BERT.\"\n","typo_probability = 0.2  # Adjust the probability as needed\n","sentence_with_typos = introduce_typos(original_sentence, typo_probability)\n","\n","print(\"Original Sentence:\", original_sentence)\n","print(\"Sentence with Typos:\", sentence_with_typos)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":14,"status":"aborted","timestamp":1702103805452,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"vac1aUL5EKBF"},"outputs":[],"source":["original_sentence = \"I dont like deep learning\"\n","sentence_with_typos = \"I dojt like deep learning\"\n","print(original_sentence, \"=>\", preprocess.number_to_label(classify(original_sentence)))\n","print(sentence_with_typos, \"=>\",preprocess.number_to_label(classify(sentence_with_typos)))"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":13,"status":"aborted","timestamp":1702103805452,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"5gyddOBkGZvU"},"outputs":[],"source":["def run_tests(number_samples, typo_frequency):\n","  original_samples = test_texts[:number_samples]\n","  perturbed_samples = []\n","  indices_of_mismatch = []\n","  for original_sample in original_samples:\n","    perturbed_sample = introduce_typos(original_sample, typo_frequency)\n","    perturbed_samples.append(perturbed_sample)\n","\n","  sample_labels = test_labels[:number_samples]\n","\n","  num_correct_original = 0\n","  num_correct_perturbed = 0\n","  for i in range(number_samples):\n","\n","    true_label = sample_labels[i]\n","    predicted_original = classify(original_samples[i])\n","    predicted_perturbed = classify(perturbed_samples[i])\n","    # if i < 5:\n","      # print(\"predicted og: \", predicted_original, \"predicted per: \", predicted_perturbed, \"true: \", true_label)\n","\n","    if predicted_original == true_label:\n","      num_correct_original += 1\n","    if predicted_perturbed == true_label:\n","      num_correct_perturbed += 1\n","    if predicted_original != predicted_perturbed:\n","      indices_of_mismatch.append(i)\n","  # print(\"Original accuracy: \", num_correct_original / number_samples)\n","  # print(\"Perturbed accuracy: \", num_correct_perturbed / number_samples)\n","  return (num_correct_original / number_samples, num_correct_perturbed / number_samples, indices_of_mismatch)\n"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","start = 0\n","stop = 0.5\n","step = 0.025\n","\n","# Create a range using numpy's arange function\n","frequencies = np.arange(start, stop + step, step)\n","og_accuracies = []\n","per_accuracies = []\n","for freq in frequencies:\n","  og_acc, per_acc, mismatch = run_tests(100, freq)\n","  og_accuracies.append(og_acc)\n","  per_accuracies.append(per_acc)\n","\n","plt.plot(frequencies, og_accuracies, label='Original Text')\n","\n","# Plotting the second set of y values\n","plt.plot(frequencies, per_accuracies, label='Text with Typos')\n","\n","# Adding labels and a legend\n","plt.xlabel('Typo Frequency')\n","plt.ylabel('Accuracy')\n","plt.title('BERT Sentiment Analysis on Original Text vs Text with Typos')\n","plt.legend()\n","\n","# Display the plot\n","plt.show()\n","\n"],"metadata":{"id":"tiJJMmOYyZkQ","executionInfo":{"status":"aborted","timestamp":1702103805452,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["index = indices_of_mismatch[5]\n","og = original_samples[index]\n","per = perturbed_samples[index]\n","print(\"True label: \", preprocess.number_to_label(test_labels[index]))\n","print(\"Original: \", og, \"=>\", preprocess.number_to_label(classify(og)))\n","print(\"Typoed: \", per, \"=>\",preprocess.number_to_label(classify(per)))"],"metadata":{"id":"fodYitJ3wRki","executionInfo":{"status":"aborted","timestamp":1702103805452,"user_tz":300,"elapsed":13,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sAgW-vCG9RsW"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":13,"status":"aborted","timestamp":1702103805452,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"},"user_tz":300},"id":"etMINqhHdnVL"},"outputs":[],"source":["# code to generate attacks using PGD\n","\n","import torch\n","from transformers import BertTokenizer, BertForSequenceClassification\n","from torch.nn import functional as F\n","\n","# Load pre-trained BERT model and tokenizer\n","model_name = \"bert-base-uncased\"\n","tokenizer = BertTokenizer.from_pretrained(model_name)\n","model = BertForSequenceClassification.from_pretrained(model_name)\n","\n","# Set model to evaluation mode\n","model.eval()\n","\n","def generate_adversarial_example(sentence, label, epsilon=0.02, max_iter=10):\n","    # Tokenize the input sentence\n","    inputs = tokenizer(sentence, return_tensors=\"pt\", truncation=True, padding=True)\n","\n","    # Forward pass to get logits\n","    outputs = model(**inputs)\n","    logits = outputs.logits\n","\n","    # Calculate loss (assuming binary classification, adjust as needed)\n","    loss = F.cross_entropy(logits, torch.tensor([label]))\n","\n","    # Calculate gradients with respect to input\n","    model.zero_grad()\n","    loss.backward()\n","\n","    # Generate perturbation based on gradients\n","    with torch.no_grad():\n","        perturbation = epsilon * torch.sign(inputs[\"input_ids\"].grad)\n","\n","    # Apply perturbation to input\n","    inputs[\"input_ids\"] = (inputs[\"input_ids\"].float() + perturbation).long()\n","\n","    # Iteratively refine the adversarial example\n","    for _ in range(max_iter):\n","        # Forward pass with the perturbed input\n","        outputs = model(**inputs)\n","        logits = outputs.logits\n","\n","        # Calculate loss\n","        loss = F.cross_entropy(logits, torch.tensor([label]))\n","\n","        # Calculate gradients with respect to input\n","        model.zero_grad()\n","        loss.backward()\n","\n","        # Update perturbation\n","        with torch.no_grad():\n","            perturbation = epsilon * torch.sign(inputs[\"input_ids\"].grad)\n","            inputs[\"input_ids\"] = (inputs[\"input_ids\"].float() + perturbation).long()\n","\n","    # Convert perturbed input back to tokens\n","    perturbed_tokens = tokenizer.convert_ids_to_tokens(inputs[\"input_ids\"].squeeze().tolist())\n","\n","    return perturbed_tokens\n","\n","# Example usage\n","sentence = \"This is a positive example.\"\n","label = 1  # Assuming binary classification, adjust as needed\n","\n","perturbed_tokens = generate_adversarial_example(sentence, label)\n","print(\"Original Sentence:\", sentence)\n","print(\"Perturbed Sentence:\", tokenizer.convert_tokens_to_string(perturbed_tokens))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D2GoSv9PdqJz","executionInfo":{"status":"aborted","timestamp":1702103805453,"user_tz":300,"elapsed":14,"user":{"displayName":"Ian Gurland","userId":"09278287982377998029"}}},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"6e30a8a6012744ff99625fedd68affc4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ff359be140eb43ac8d5bd17c336b7928","IPY_MODEL_b1a7325ca76a4ad7a410fa98fc0cb790","IPY_MODEL_1648e34f1c61444bb377d80d982f6793"],"layout":"IPY_MODEL_6319a1710d2644248441f86768aa5927"}},"ff359be140eb43ac8d5bd17c336b7928":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e1dd4e17864c482dbadd82750794bda6","placeholder":"​","style":"IPY_MODEL_64db10620caa4c8584b0dcf2c5923ba9","value":"tokenizer_config.json: 100%"}},"b1a7325ca76a4ad7a410fa98fc0cb790":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a797a2e62fae4d688315cb64b8f92d08","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9ec409b0f0cc47c9ac665d864eea3d70","value":28}},"1648e34f1c61444bb377d80d982f6793":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_32a8f40ead35469fbd10759b39b23aa8","placeholder":"​","style":"IPY_MODEL_21261757adc247469dd212b28cbdd9c7","value":" 28.0/28.0 [00:00&lt;00:00, 1.34kB/s]"}},"6319a1710d2644248441f86768aa5927":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e1dd4e17864c482dbadd82750794bda6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"64db10620caa4c8584b0dcf2c5923ba9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a797a2e62fae4d688315cb64b8f92d08":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ec409b0f0cc47c9ac665d864eea3d70":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"32a8f40ead35469fbd10759b39b23aa8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21261757adc247469dd212b28cbdd9c7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cb307c49ee1245fbbff31e6abc7cadb0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dbc81286dd224fddb4ba20960f7c59c2","IPY_MODEL_4f28e70dd72d47c9b9230ecb59c45f45","IPY_MODEL_a69bae94985f43cbb661e02143148db2"],"layout":"IPY_MODEL_bba5e7bcd4874b7a8c5a2da2fcbff903"}},"dbc81286dd224fddb4ba20960f7c59c2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a4059cf2c0df4c39933ed649313d88e8","placeholder":"​","style":"IPY_MODEL_03a68f8296d54fcca73abd239c87c3f8","value":"vocab.txt: 100%"}},"4f28e70dd72d47c9b9230ecb59c45f45":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_11852c7aa65e4a35b2b86aa234ccd2e3","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9d0104b85ca54dd88b4d3e26fa60ba4e","value":231508}},"a69bae94985f43cbb661e02143148db2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5b4915ce14ec4440955e4eea574e6eb9","placeholder":"​","style":"IPY_MODEL_1896a94914fe4670ab89ced32b777a7e","value":" 232k/232k [00:00&lt;00:00, 11.1MB/s]"}},"bba5e7bcd4874b7a8c5a2da2fcbff903":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a4059cf2c0df4c39933ed649313d88e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"03a68f8296d54fcca73abd239c87c3f8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"11852c7aa65e4a35b2b86aa234ccd2e3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d0104b85ca54dd88b4d3e26fa60ba4e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5b4915ce14ec4440955e4eea574e6eb9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1896a94914fe4670ab89ced32b777a7e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c6a01ff81284448e9fd3b1aa9bdcc013":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_03769cd731e247eea28e551f1ee76332","IPY_MODEL_8a4cd43e27c842b39b8774b8a321c3a5","IPY_MODEL_8095eac1d59346b2876db4a65855f866"],"layout":"IPY_MODEL_2c7b881a8f9c4bbf8a71e4884992c6f0"}},"03769cd731e247eea28e551f1ee76332":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_af6b2872e5204e32949fc2269d1ebfd9","placeholder":"​","style":"IPY_MODEL_3d838bfaa3cf4276adf3878b74ed251b","value":"tokenizer.json: 100%"}},"8a4cd43e27c842b39b8774b8a321c3a5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3289395a367c4d9ba1a11b9f676e73a3","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_33cd4b1e64f94eb5812249b26a9eb69f","value":466062}},"8095eac1d59346b2876db4a65855f866":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_75af42cb57f849d2b03bf29ac3f953d1","placeholder":"​","style":"IPY_MODEL_127de2827b944e80a131e3bf928b07b8","value":" 466k/466k [00:00&lt;00:00, 1.02MB/s]"}},"2c7b881a8f9c4bbf8a71e4884992c6f0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"af6b2872e5204e32949fc2269d1ebfd9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d838bfaa3cf4276adf3878b74ed251b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3289395a367c4d9ba1a11b9f676e73a3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"33cd4b1e64f94eb5812249b26a9eb69f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"75af42cb57f849d2b03bf29ac3f953d1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"127de2827b944e80a131e3bf928b07b8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"abf47254d6a14c47baba64616b0b6bf4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bfa188d1a91741ac8e5275fb41226541","IPY_MODEL_755b4e6af4a54654b754e94e0605b2b0","IPY_MODEL_73db575c4eae4dfa96c36d14f7340bf0"],"layout":"IPY_MODEL_a5c8f37190454d73ab1e6d452e7b39fc"}},"bfa188d1a91741ac8e5275fb41226541":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fa76b86b9ab74346971ad5d60dc89b39","placeholder":"​","style":"IPY_MODEL_08b91cc1cf74457fa1b55d16526ec6a6","value":"config.json: 100%"}},"755b4e6af4a54654b754e94e0605b2b0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3644dbdab86f4032959ab23808d005a5","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0cb127a7554b498e91f0ac741b808395","value":570}},"73db575c4eae4dfa96c36d14f7340bf0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9b3533d357f849eb9de8043b7488c836","placeholder":"​","style":"IPY_MODEL_26d8f8b4d4034b04a9631dfba4bd0786","value":" 570/570 [00:00&lt;00:00, 39.3kB/s]"}},"a5c8f37190454d73ab1e6d452e7b39fc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fa76b86b9ab74346971ad5d60dc89b39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"08b91cc1cf74457fa1b55d16526ec6a6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3644dbdab86f4032959ab23808d005a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0cb127a7554b498e91f0ac741b808395":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9b3533d357f849eb9de8043b7488c836":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"26d8f8b4d4034b04a9631dfba4bd0786":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"309294303e364ae3924acd3cde2edf1f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2bae6793c48b44c6a6fe2537f021ed02","IPY_MODEL_2aaae953380b40f5aa783be13bfb6c49","IPY_MODEL_0e5492abe4d9461fa5f5c9a0664c9030"],"layout":"IPY_MODEL_e6cdc062423846918034192e61df0cef"}},"2bae6793c48b44c6a6fe2537f021ed02":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8a0221675e6c4df8a8f636a3471c6d3b","placeholder":"​","style":"IPY_MODEL_ad6a133580914345bed1f575095702a4","value":"model.safetensors: 100%"}},"2aaae953380b40f5aa783be13bfb6c49":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_862364e9011d401bba60138994c84d0d","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a536a6464d664732acb3d84dada67185","value":440449768}},"0e5492abe4d9461fa5f5c9a0664c9030":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4006ac22966e4251990f58c689dfeb8d","placeholder":"​","style":"IPY_MODEL_8ae6fb8d05e847d18ccca43eba47423b","value":" 440M/440M [00:01&lt;00:00, 295MB/s]"}},"e6cdc062423846918034192e61df0cef":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a0221675e6c4df8a8f636a3471c6d3b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad6a133580914345bed1f575095702a4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"862364e9011d401bba60138994c84d0d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a536a6464d664732acb3d84dada67185":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4006ac22966e4251990f58c689dfeb8d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ae6fb8d05e847d18ccca43eba47423b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}